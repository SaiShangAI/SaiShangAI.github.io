<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://saishangai.github.io</id>
    <title>Sai&apos;s Blog</title>
    <updated>2020-02-03T20:01:25.503Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://saishangai.github.io"/>
    <link rel="self" href="https://saishangai.github.io/atom.xml"/>
    <subtitle>Hello, Welcome to Sai&apos;s Page! The webpage is developing now. Please be paticient.</subtitle>
    <logo>https://saishangai.github.io/images/avatar.png</logo>
    <icon>https://saishangai.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Sai&apos;s Blog</rights>
    <entry>
        <title type="html"><![CDATA[Website for Vacuum Cleaner Shopping]]></title>
        <id>https://saishangai.github.io/post/website-for-vacuum-cleaner-shopping</id>
        <link href="https://saishangai.github.io/post/website-for-vacuum-cleaner-shopping">
        </link>
        <updated>2020-01-31T07:08:05.000Z</updated>
        <summary type="html"><![CDATA[<p>I built a website for selling vacuum cleaner in free time. You can click <a href="https://www.youtube.com/watch?v=9J6t-WS1Tp4">here</a> to see it.</p>
]]></summary>
        <content type="html"><![CDATA[<p>I built a website for selling vacuum cleaner in free time. You can click <a href="https://www.youtube.com/watch?v=9J6t-WS1Tp4">here</a> to see it.</p>
<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Traschbin Management System Using IoT]]></title>
        <id>https://saishangai.github.io/post/traschbin-management-system</id>
        <link href="https://saishangai.github.io/post/traschbin-management-system">
        </link>
        <updated>2020-01-22T22:29:10.000Z</updated>
        <content type="html"><![CDATA[<h1 id="introduce">Introduce</h1>
<p>The system is based on Arduino Nano and ultrasonic sensors to monitor the fullness of the trash cans and to send the collected data to Azure Clould using Rasberry PI with WIFI. The cleaners can know the situation of each trash can at any time through android application. The mobile app get and update the information of each trash can from Azure clould.<br>
<img src="https://saishangai.github.io/post-images/1580211341592.png" alt="" loading="lazy"></p>
<h2 id="material">Material</h2>
<ul>
<li>Hardware:
<ol>
<li>Arduino</li>
<li>Ultrasonic Sensor (HC-SR04)</li>
<li>Rasberry PI</li>
<li>Android Phone</li>
<li>Zigbee Module</li>
<li>Bread Board</li>
</ol>
</li>
<li>Softwate:
<ol>
<li>Arduino IDE</li>
<li>Android Studio</li>
<li>VNC</li>
</ol>
</li>
<li>Programming Language
<ol>
<li>C</li>
<li>Java</li>
</ol>
</li>
</ul>
<h2 id="implementation">Implementation</h2>
<p>The implementation of the system can be divided into 4 modules: <strong>mearsing trash</strong>, <strong>communication between node and gateway</strong>, <strong>communication between gateway and Azure clould, the development of mobile application</strong>.</p>
<ol>
<li><strong>Mearsing trash height</strong> : I combined aduino uno and ultrasonic Sensor to detect the height of trash. The hardware connection is displaied in below.<br>
<img src="https://saishangai.github.io/post-images/1580248819148.png" alt="" loading="lazy"><br>
Ultrasonic sensor measure the distance to an object using ultrasonic sound wave. It uses a single transducer to send a pulse and to receive the echo.</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[About ME ^_^]]></title>
        <id>https://saishangai.github.io/post/About Me</id>
        <link href="https://saishangai.github.io/post/About Me">
        </link>
        <updated>2020-01-11T11:29:51.000Z</updated>
        <content type="html"><![CDATA[<h2 id="introduce">Introduce</h2>
<figure data-type="image" tabindex="1"><img src="https://saishangai.github.io/post-images/1580158538681.png" alt="" loading="lazy"></figure>
<p>I am Sai Shang. I completed my Bachelor's degree in Computer Science in China. In 2019 I graduated with a degree in M.Sc. Information and Communication Technology at the University of Duisburg-Essen, with a focus in &quot;Embedded Systems Engineering, ISE&quot;.  I likes programming because I can turn my interesting idea into reality through programming code.  I'm familiar with programming like java, python, c#, javascript. During the studing time, I have done different pratical project In IoT lab. Like developed  mobile application based on android plateform, applied VR technoly into sesornetwork and so on.</p>
<p>I'm also interested in web development. My master topic is about that.  I developed a web-based application prototype.  In this prototype, I designed and applied different comparative visualization methods (2D Matrix ,2D Bubble Chart and 3D map) to display a lot of  products. Through this project, I gained  how to develop a website include front-end and back end and how to design interactive user interfaces based on user needs.</p>
<h1 id="contact">Contact</h1>
<p>📧 Email: <a href="">saishang521@gmail.com</a><br>
📞 Phone: +49 176 30192 746<br>
📫 Address: 285. Heerstraße, 47053 Duisburg, Deutschland</p>
<h1 id="cv-preview">CV Preview</h1>
<p><a href="https://github.com/SaiShangAI/Documents">DE_Lenbenslauf</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Master Thesis-Development of visualization methods for a comparison-based recommender system]]></title>
        <id>https://saishangai.github.io/post/master-thesis</id>
        <link href="https://saishangai.github.io/post/master-thesis">
        </link>
        <updated>2020-01-09T12:47:41.000Z</updated>
        <content type="html"><![CDATA[<figure data-type="image" tabindex="1"><img src="https://saishangai.github.io/post-images/1580160703877.png" alt="" loading="lazy"></figure>
<h1 id="abstract">Abstract</h1>
<p>Product comparison tools are often used in online retailing, where also recommender systems are very popular. Nonetheless their effects and possible benefits on the decision-making stage during the recommending process have never been studied and no proper research has been conducted about their combination. Besides, although there is a whole research field regarding information visualization, there are open questions regarding the best way to present the product space (to ease the exploration and understanding of the whole set of recommended items) and individual product properties (to individually decide for the best option) when using a comparison tool. To research these questions, a novel concept of a comparison-based recommender system is introduced in this paper. It concentrates on two visualization levels: whole product space and individual items. For the first level, a 2D bubble chart and a 3D map-based visualization are applied to present a set of recommended items. For the second level, two different approaches for single attribute comparison are available: relative differences and absolute values. To assess the validity of the approaches, a prototype for a shopping site was developed and implemented based on the aforementioned comparative visualizations. Finally, a user study was conducted. The results indicate the comparison tools have a positive effect in the RS area.</p>
<h1 id="thesis-approach">Thesis Approach</h1>
<p>Various visualization techniques are now available on the Internet. These comparative visualization methods are used in the fields of medicine, commerce, transportation, etc. to  help people discover differences between objects. The process of discovering discrepancies  involves finding the relationships between objects. To better design the comparison tools  used in the recommender systems, a pre-study of comparative visualization techniques was  conducted. This thesis takes into account the products to be compared, the number of recommendations and the complexity of the items and then devised several visualization methods that be benefificial in comparing products and contributing to the decision-making.</p>
<ol>
<li>
<p>The first one is related to the visual representation of product space. The product space refers to the whole set of recommended items, which can be very large and difficult to explore. For such a scenario, I use a 2D bubble chart and 3D map, which are the best results of pre-study, to provide the users with an overview of all recommendations. In addition, both methods still visually show the basic discrepancies between the items.</p>
<ul>
<li>2D Bubble Chart: When a recommender system recommends a set of items based on a user’s preference, the recommendations are represented by the bubbles with  product images. Products are displayed in a 2D bubble chart. The x and y axes of the bubble chart are the numeric attributes that users want to compare. Each item  on both axes is arranged from small to large according to the value of features. So  the users can not only see the recommended products, but also intuitively know  the difference between the items from their location and distribution. Besides, the  color of bubble represents if a product satisfifies filtering conditions. The size of a  bubble indicates how well each item meets a user’s preferences.<br>
<img src="https://saishangai.github.io/post-images/1580151066684.png" alt="" loading="lazy"></li>
<li>3D Map: It is similar to 2D bubble chart, but the recommended items are displayed on a 3D map. In addition to giving a comparative meaning on the x-axis and y axis, the elevation of the map’s surface is used to indicate how much each recommended item meets the users’ preferences. The color of the surface is changed with the users’ preferences. Furthermore, it supplies interaction with product space through rotate, zoom, drag.<br>
<img src="https://saishangai.github.io/post-images/1580151128999.png" alt="" loading="lazy"></li>
</ul>
</li>
<li>
<p>The second part is the visualization of product properties. The items’ attributes are displayed side by side in a dynamic table using two visualization methods: relative difference visualization and absolute value visualization.</p>
<ul>
<li>
<p>Dynamic Table: The so-called dynamic comparison table uses rows to represent item properties, columns to represent products. The users can select some products from product space for comparing and these items will be dynamically added to the table. Besides, interactive functions that assist in comparing are provided, such as sorting items based on a specific attribute, deleting items. As the users’preferences change, the order of the properties will change dynamically. Faced with numerous attributes, some that are important to the users will be displayed in prominent locations.</p>
</li>
<li>
<p>Absolute value visualization: Values are represented side by side by a verticalbar chart in a dynamic table. The height of rectangular bars is proportional to the values. Besides, the color of the bars (from dark to light) is also mapped to the size of the values (small to large).<br>
<img src="https://saishangai.github.io/post-images/1580151528767.png" alt="" loading="lazy"></p>
</li>
<li>
<p>Relative difference visualization: The relative difference represents the percentage increase or decreases of values compared to a baseline. The baseline can be chosen dynamically by users. The percentage is displayed side by side by a vertical positive or negative bar in a dynamic table. In order to highlight the difference between the ratios, the technique of color-coding is also applied to show the rectangular bars.<br>
<img src="https://saishangai.github.io/post-images/1580151534208.png" alt="" loading="lazy"></p>
</li>
</ul>
</li>
</ol>
<h1 id="systems-architecture">System's Architecture</h1>
<p>The web-based application prototype includes a recommender system with a comparison tool. The system recommends items according to user preferences which are collected explicitly from users'  interaction with the features filter. Then the comparison tool displays the set of recommended items using of the previously designed visualizations. The whole system's architecture is below:<br>
<img src="https://saishangai.github.io/post-images/1580151712829.png" alt="" loading="lazy"></p>
<h1 id="used-technologies">Used Technologies</h1>
<p>The server is built using Node.js. It is a runtime environment for JavaScript based on ChromeV8 engine. Node.js uses an event-driven, asynchronous I/O model. It is used to build fast, easy-to-expand web applications easily.</p>
<p>The server is also connected with a database, which is developed using MySQL. MySQL is a relational database management system. Relational databases store data in separate tables instead of place all of the data in a large repository, which increases speed and flexibility. The SQL language used by MySQL is also the most commonly used standardized language for<br>
accessing databases.</p>
<p>Besides, XAMPP is used to manage and deploy databases easily. XAMPP is a powerful integration package includes Apache, MySQL, PHP and PERL. This thesis only uses its MySQL and corresponding management page.</p>
<p>The webpages in the client were created using JQuery, D3.js, HTML,CSS, Bootstrape and Unity.  jQuery is a fast, simple and clear JavaScript framework. It wraps the commonly used JavaScript functions and provides a design pattern that optimizes HTML document manipulation, event handling, animation design, communication and user interaction. D3.js is similar to JQuery, it is a JavaScript library to manupulate web documents. But it’s advantage to draw custom shapes and graphs based on the data.</p>
<p>Unity is a multi-platform (including web platform) game engine. Developers can use it to create such as 3D video games, 3D animations, VR projects and 3D web applications. In this thesis, it is used to create the 3D Map.</p>
<h1 id="links">Links</h1>
<ul>
<li><a href="https://github.com/SaiShangAI/Documents">Presentation</a></li>
<li>[Youtube]</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://saishangai.github.io/post/hello-gridea</id>
        <link href="https://saishangai.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>